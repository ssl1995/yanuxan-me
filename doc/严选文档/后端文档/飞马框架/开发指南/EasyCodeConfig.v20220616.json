{"author":"luozhan","version":"1.2.4","userSecure":"","currTypeMapperGroupName":"Default","currTemplateGroupName":"msb-code","currColumnConfigGroupName":"Default","currGlobalConfigGroupName":"Default","typeMapper":{"Default":{"name":"Default","elementList":[{"matchType":"REGEX","columnType":"varchar(\\(\\d+\\))?","javaType":"java.lang.String"},{"matchType":"REGEX","columnType":"char(\\(\\d+\\))?","javaType":"java.lang.String"},{"matchType":"REGEX","columnType":"(tiny|medium|long)*text","javaType":"java.lang.String"},{"matchType":"REGEX","columnType":"decimal(\\(\\d+,\\d+\\))?","javaType":"java.math.BigDecimal"},{"matchType":"ORDINARY","columnType":"integer","javaType":"java.lang.Integer"},{"matchType":"REGEX","columnType":"(tiny|small|medium)*int(\\(\\d+\\))?","javaType":"java.lang.Integer"},{"matchType":"REGEX","columnType":"(tiny|small|medium)*int(\\(\\d+\\)) unsigned?","javaType":"java.lang.Integer"},{"matchType":"REGEX","columnType":"tinyint(1) unsigned?","javaType":"java.lang.Boolean"},{"matchType":"ORDINARY","columnType":"int4","javaType":"java.lang.Integer"},{"matchType":"ORDINARY","columnType":"int8","javaType":"java.lang.Long"},{"matchType":"REGEX","columnType":"bigint(\\(\\d+\\))?","javaType":"java.lang.Long"},{"matchType":"REGEX","columnType":"bigint(\\(\\d+\\)) unsigned?","javaType":"java.lang.Long"},{"matchType":"ORDINARY","columnType":"date","javaType":"java.time.LocalDate"},{"matchType":"ORDINARY","columnType":"datetime","javaType":"java.time.LocalDateTime"},{"matchType":"ORDINARY","columnType":"timestamp","javaType":"java.time.LocalDateTime"},{"matchType":"ORDINARY","columnType":"time","javaType":"java.time.LocalTime"},{"matchType":"ORDINARY","columnType":"boolean","javaType":"java.lang.Boolean"}]}},"template":{"msb-code":{"name":"msb-code","elementList":[{"name":"controller.java.vm","code":"##导入宏定义\n$!{define.vm}\n\n##设置表后缀（宏定义）\n#setTableSuffix(\"Controller\")\n\n##保存文件（宏定义）\n#save(\"/controller\", \"Controller.java\")\n\n##包路径（宏定义）\n#setPackageSuffix(\"controller\")\n\n##定义服务名\n#set($serviceName = $!tool.append($!tool.firstLowerCase($!tableInfo.name), \"Service\"))\n\n#set($convertName = $!tool.append($!tool.firstLowerCase($!tableInfo.name), \"Convert\"))\n\n##定义实体对象名\n#set($entityName = $!tool.firstLowerCase($!tableInfo.name))\n\n\nimport com.baomidou.mybatisplus.core.metadata.IPage;\nimport $!{tableInfo.savePackageName}.model.vo.$!{tableInfo.name}VO;\nimport $!{tableInfo.savePackageName}.model.dto.$!{tableInfo.name}DTO;\nimport $!{tableInfo.savePackageName}.service.$!{tableInfo.name}Service;\nimport org.springframework.web.bind.annotation.*;\nimport com.msb.framework.common.model.PageDTO;\n\nimport javax.annotation.Resource;\nimport java.io.Serializable;\nimport java.util.List;\n\n##表注释（宏定义）\n#tableComment(\"表控制层\")\n@RestController\n@RequestMapping(\"$!tool.firstLowerCase($!tableInfo.name)\")\npublic class $!{tableName} {\n    /**\n     * 服务对象\n     */\n    @Resource\n    private $!{tableInfo.name}Service $!{serviceName};\n\n    @GetMapping\n    public IPage<$!{tableInfo.name}VO> page(PageDTO pageDTO, $!{tableInfo.name}DTO $!{entityName}DTO) {\n        return $!{serviceName}.page(pageDTO, $!{entityName}DTO);\n    }\n\n    @GetMapping(\"{id}\")\n    public $!{tableInfo.name}VO getOne(@PathVariable Serializable id) {\n        return this.$!{serviceName}.getOne(id);\n    }\n\n    @PostMapping\n    public Boolean save(@RequestBody $!{tableInfo.name}DTO $!{entityName}DTO) {\n        return this.$!{serviceName}.save($!{entityName}DTO);\n    }\n\n    @PutMapping\n    public Boolean update(@RequestBody $!{tableInfo.name}DTO $!{entityName}DTO) {\n        return this.$!{serviceName}.update($!{entityName}DTO);\n    }\n\n    @DeleteMapping\n    public Boolean delete(@RequestParam(\"idList\") List<Long> idList) {\n        return this.$!{serviceName}.delete(idList);\n    }\n}\n"},{"name":"dao.java.vm","code":"##导入宏定义\n$!{define.vm}\n\n##设置表后缀（宏定义）\n#setTableSuffix(\"Mapper\")\n\n##保存文件（宏定义）\n#save(\"/mapper\", \"Mapper.java\")\n\n##包路径（宏定义）\n#setPackageSuffix(\"mapper\")\n\n\nimport com.baomidou.mybatisplus.core.mapper.BaseMapper;\nimport $!{tableInfo.savePackageName}.model.entity.$!tableInfo.name;\n\n##表注释（宏定义）\n#tableComment(\"表数据库访问层\")\npublic interface $!{tableName} extends BaseMapper<$!tableInfo.name> {\n\n}\n"},{"name":"entity.java.vm","code":"##导入宏定义\n$!{define.vm}\n\n##保存文件（宏定义）\n#save(\"/model/entity\", \".java\")\n\n##包路径（宏定义）\n#setPackageSuffix(\"model.entity\")\n\n##自动导入包（全局变量）\n$!autoImport\nimport com.baomidou.mybatisplus.annotation.*;\nimport com.baomidou.mybatisplus.extension.activerecord.Model;\nimport com.msb.framework.mysql.BaseEntity;\n\nimport lombok.Data;\nimport lombok.EqualsAndHashCode;\n\nimport java.io.Serializable;\nimport java.math.BigDecimal;\nimport java.time.LocalDateTime;\n\n\n\n##表注释（宏定义）\n#tableComment(\"表实体类\")\n@Data\n@EqualsAndHashCode(callSuper = true)\n@TableName(\"$!{tableInfo.obj.name}\")\npublic class $!{tableInfo.name} extends BaseEntity implements Serializable {\n\n#foreach($column in $tableInfo.fullColumn)\n#if(${column.comment} && (!($!column.name.equals(\"updateTime\") || $!column.name.equals(\"createTime\") || $!column.name.equals(\"createUser\") || $!column.name.equals(\"updateUser\"))))\n    /**\n     * ${column.comment} \n     */\n#end\n#if($!column.name.equals(\"id\"))    @TableId\n#if($!column.type.equals(\"java.lang.Long\"))(type = IdType.AUTO)\n#end\n#end\n#if($!column.name.equals(\"isDeleted\"))    @TableField(fill = FieldFill.INSERT)\n#end\n#if(!($!column.name.equals(\"updateTime\") || $!column.name.equals(\"createTime\") || $!column.name.equals(\"createUser\") || $!column.name.equals(\"updateUser\")))\n    private $!{tool.getClsNameByFullName($column.type)} $!{column.name};\n #end\n \n#end\n}\n"},{"name":"serviceImpl.java.vm","code":"##导入宏定义\n$!{define.vm}\n\n##设置表后缀（宏定义）\n#setTableSuffix(\"Service\")\n\n##保存文件（宏定义）\n#save(\"/service\", \"Service.java\")\n\n##包路径（宏定义）\n#setPackageSuffix(\"service\")\n\n##定义实体对象名\n#set($entityName = $!tool.firstLowerCase($!tableInfo.name))\n\nimport com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;\nimport $!{tableInfo.savePackageName}.mapper.$!{tableInfo.name}Mapper;\nimport $!{tableInfo.savePackageName}.model.entity.$!tableInfo.name;\nimport $!{tableInfo.savePackageName}.model.vo.$!{tableInfo.name}VO;\nimport $!{tableInfo.savePackageName}.model.dto.$!{tableInfo.name}DTO;\nimport $!{tableInfo.savePackageName}.service.convert.$!{tableInfo.name}Convert;\nimport org.springframework.stereotype.Service;\n\n\nimport com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;\nimport com.msb.framework.common.model.PageDTO;\nimport javax.annotation.Resource;\nimport com.baomidou.mybatisplus.core.metadata.IPage;\n\nimport java.io.Serializable;\nimport java.util.List;\n\n##表注释（宏定义）\n#tableComment(\"表服务实现类\")\n@Service(\"$!tool.firstLowerCase($tableInfo.name)Service\")\npublic class $!{tableName} extends ServiceImpl<$!{tableInfo.name}Mapper, $!{tableInfo.name}> {\n\n    @Resource\n    private $!{tableInfo.name}Convert $!{entityName}Convert;\n    \n    public IPage<$!{tableInfo.name}VO> page(PageDTO pageDTO, $!{tableInfo.name}DTO $!{entityName}DTO) {\n        return $!{entityName}Convert.toVo(this.page(pageDTO.page(), new QueryWrapper<$!{tableInfo.name}>().setEntity($!{entityName}Convert.toDo($!{entityName}DTO))));\n    }\n\n    public $!{tableInfo.name}VO getOne(Serializable id) {\n        return $!{entityName}Convert.toVo(this.getById(id));\n    }\n\n    public Boolean save($!{tableInfo.name}DTO $!{entityName}DTO) {\n        return this.save($!{entityName}Convert.toDo($!{entityName}DTO));\n    }\n\n    public Boolean update($!{tableInfo.name}DTO $!{entityName}DTO) {\n        return this.updateById($!{entityName}Convert.toDo($!{entityName}DTO));\n    }\n\n    public Boolean delete(List<Long> idList) {\n        return this.removeByIds(idList);\n    }\n}\n"},{"name":"convert.vm","code":"##导入宏定义\n$!{define.vm}\n\n##设置表后缀（宏定义）\n##setTableSuffix(\"Convert\")\n\n##保存文件（宏定义）\n#save(\"/service/convert\", \"Convert.java\")\n\n##包路径（宏定义）\n#setPackageSuffix(\"service.convert\")\n\n#set($entityName = $!tool.firstLowerCase($!tableInfo.name))\n\nimport com.baomidou.mybatisplus.extension.plugins.pagination.Page;\nimport $!{tableInfo.savePackageName}.model.entity.$!tableInfo.name;\nimport $!{tableInfo.savePackageName}.model.vo.$!{tableInfo.name}VO;\nimport $!{tableInfo.savePackageName}.model.dto.$!{tableInfo.name}DTO;\n\nimport java.util.List;\nimport org.mapstruct.Mapper;\n\n##表注释（宏定义）\n#tableComment(\"表服务接口\")\n@Mapper(componentModel = \"spring\")\npublic interface $!{tableInfo.name}Convert {\n\n    $!{tableInfo.name}VO toVo($!{tableInfo.name} $!{entityName});\n\n    List<$!{tableInfo.name}VO> toVo(List<$!{tableInfo.name}> $!{entityName});\n\n    Page<$!{tableInfo.name}VO> toVo(Page<$!{tableInfo.name}> $!{entityName});\n\n    $!{tableInfo.name} toDo($!{tableInfo.name}DTO $!{entityName}DTO);\n}\n"},{"name":"VO.vm","code":"##导入宏定义\n$!{define.vm}\n\n##保存文件（宏定义）\n#save(\"/model/vo\", \"VO.java\")\n\n##包路径（宏定义）\n#setPackageSuffix(\"model.vo\")\n\n##自动导入包（全局变量）\n$!autoImport\n\nimport lombok.Data;\n\nimport java.io.Serializable;\nimport java.time.LocalDateTime;\nimport io.swagger.annotations.ApiModelProperty;\nimport java.math.BigDecimal;\n\n\n##表注释（宏定义）\n#tableComment(\"表实体类\")\n@Data\npublic class $!{tableInfo.name}VO implements Serializable {\n\n#foreach($column in $tableInfo.fullColumn)\n#if(${column.comment})    @ApiModelProperty(\"${column.comment}\")\n#end\n    private $!{tool.getClsNameByFullName($column.type)} $!{column.name};\n    \n#end\n}\n"},{"name":"DTO.vm","code":"##导入宏定义\n$!{define.vm}\n\n##保存文件（宏定义）\n#save(\"/model/dto\", \"DTO.java\")\n\n##包路径（宏定义）\n#setPackageSuffix(\"model.dto\")\n\n##自动导入包（全局变量）\n$!autoImport\n\nimport lombok.Data;\n\nimport java.io.Serializable;\nimport java.time.LocalDateTime;\nimport io.swagger.annotations.ApiModelProperty;\nimport java.math.BigDecimal;\n\n\n##表注释（宏定义）\n#tableComment(\"表实体类\")\n@Data\npublic class $!{tableInfo.name}DTO implements Serializable {\n\n#foreach($column in $tableInfo.fullColumn)\n#if(${column.comment})    @ApiModelProperty(\"${column.comment}\")\n#end\n    private $!{tool.getClsNameByFullName($column.type)} $!{column.name};\n    \n#end\n}\n"}]}},"columnConfig":{"Default":{"name":"Default","elementList":[{"title":"disable","type":"BOOLEAN","selectValue":""},{"title":"support","type":"SELECT","selectValue":"add,edit,query,del,ui"}]}},"globalConfig":{"Default":{"name":"Default","elementList":[{"name":"autoImport.vm","value":"##自动导入包（仅导入实体属性需要的包，通常用于实体类）\n#foreach($import in $importList)\nimport $!import;\n#end"},{"name":"init.vm","value":"##初始化区域\n\n##去掉表的t_前缀\n$!tableInfo.setName($tool.getClassName($tableInfo.obj.name.replaceFirst(\"book_\",\"\")))\n\n##参考阿里巴巴开发手册，POJO 类中布尔类型的变量，都不要加 is 前缀，否则部分框架解析会引起序列化错误\n#foreach($column in $tableInfo.fullColumn)\n#if($column.name.startsWith(\"is\") && $column.type.equals(\"java.lang.Boolean\"))\n    $!column.setName($tool.firstLowerCase($column.name.substring(2)))\n#end\n#end\n\n##实现动态排除列\n#set($temp = $tool.newHashSet(\"testCreateTime\", \"otherColumn\"))\n#foreach($item in $temp)\n    #set($newList = $tool.newArrayList())\n    #foreach($column in $tableInfo.fullColumn)\n        #if($column.name!=$item)\n            ##带有反回值的方法调用时使用$tool.call来消除返回值\n            $tool.call($newList.add($column))\n        #end\n    #end\n    ##重新保存\n    $tableInfo.setFullColumn($newList)\n#end\n\n##对importList进行篡改\n#set($temp = $tool.newHashSet())\n#foreach($column in $tableInfo.fullColumn)\n    #if(!$column.type.startsWith(\"java.lang.\"))\n        ##带有反回值的方法调用时使用$tool.call来消除返回值\n        $tool.call($temp.add($column.type))\n    #end\n#end\n##覆盖\n#set($importList = $temp)"},{"name":"mybatisSupport.vm","value":"##针对Mybatis 进行支持，主要用于生成xml文件\n#foreach($column in $tableInfo.fullColumn)\n    ##储存列类型\n    $tool.call($column.ext.put(\"sqlType\", $tool.getField($column.obj.dataType, \"typeName\")))\n    #if($tool.newHashSet(\"java.lang.String\").contains($column.type))\n        #set($jdbcType=\"VARCHAR\")\n    #elseif($tool.newHashSet(\"java.lang.Boolean\", \"boolean\").contains($column.type))\n        #set($jdbcType=\"BOOLEAN\")\n    #elseif($tool.newHashSet(\"java.lang.Byte\", \"byte\").contains($column.type))\n        #set($jdbcType=\"BYTE\")\n    #elseif($tool.newHashSet(\"java.lang.Integer\", \"int\", \"java.lang.Short\", \"short\").contains($column.type))\n        #set($jdbcType=\"INTEGER\")\n    #elseif($tool.newHashSet(\"java.lang.Long\", \"long\").contains($column.type))\n        #set($jdbcType=\"INTEGER\")\n    #elseif($tool.newHashSet(\"java.lang.Float\", \"float\", \"java.lang.Double\", \"double\").contains($column.type))\n        #set($jdbcType=\"NUMERIC\")\n    #elseif($tool.newHashSet(\"java.util.Date\", \"java.sql.Timestamp\", \"java.time.Instant\", \"java.time.LocalDateTime\", \"java.time.OffsetDateTime\", \"\tjava.time.ZonedDateTime\").contains($column.type))\n        #set($jdbcType=\"TIMESTAMP\")\n    #elseif($tool.newHashSet(\"java.sql.Date\", \"java.time.LocalDate\").contains($column.type))\n        #set($jdbcType=\"TIMESTAMP\")\n    #else\n        ##其他类型\n        #set($jdbcType=\"VARCHAR\")\n    #end\n    $tool.call($column.ext.put(\"jdbcType\", $jdbcType))\n#end\n\n##定义宏，查询所有列\n#macro(allSqlColumn)#foreach($column in $tableInfo.fullColumn)$column.obj.name#if($velocityHasNext), #end#end#end\n"},{"name":"define.vm","value":"##（Velocity宏定义）\n\n##定义设置表名后缀的宏定义，调用方式：#setTableSuffix(\"Test\")\n###set($a = $!tool.append($!tableInfo.name, \"\"))\n\n#if($tableInfo.obj.name.startsWith(\"edu_\"))\n        $!tableInfo.setName($tool.getClassName($tableInfo.obj.name.replaceFirst(\"edu_\",\"\")))   \n#end\n#macro(setTableSuffix $suffix)\n    #set($tableName = $!tool.append($tableInfo.name, $suffix))\n#end\n\n##定义设置包名后缀的宏定义，调用方式：#setPackageSuffix(\"Test\")\n#macro(setPackageSuffix $suffix)\n#if($suffix!=\"\")package #end#if($tableInfo.savePackageName!=\"\")$!{tableInfo.savePackageName}.#{end}$!suffix;\n#end\n\n##定义直接保存路径与文件名简化的宏定义，调用方式：#save(\"/entity\", \".java\")\n#macro(save $path $fileName)\n    $!callback.setSavePath($tool.append($tableInfo.savePath, $path))\n    $!callback.setFileName($tool.append($tableInfo.name, $fileName))\n#end\n\n##定义表注释的宏定义，调用方式：#tableComment(\"注释信息\")\n#macro(tableComment $desc)\n/**\n * $!{tableInfo.comment}($!{tableInfo.name})$desc\n *\n * @author $!author\n * @since $!time.currTime()\n */\n#end\n\n##定义GET，SET方法的宏定义，调用方式：#getSetMethod($column)\n#macro(getSetMethod $column)\n\n    public $!{tool.getClsNameByFullName($column.type)} get$!{tool.firstUpperCase($column.name)}() {\n        return $!{column.name};\n    }\n\n    public void set$!{tool.firstUpperCase($column.name)}($!{tool.getClsNameByFullName($column.type)} $!{column.name}) {\n        this.$!{column.name} = $!{column.name};\n    }\n#end"}]}}}